= Common Log File System (CLFS)
Analysis of the Windows ARIES-based log system

:toc:
:toclevels: 4

:numbered!:
[abstract]
== Summary
As of Windows Vista support for Transactional NTFS (TxF) and Transactional
Registry (TxR) were added. Both systems use the Common Log File System (CLFS)
which was introduced in Windows server 2003 R2.

This document is intended as a working document for the CLFS format. Which
should allow existing Open Source forensic tooling to be able to process this
type of file system.

[preface]
== Document information
[cols="1,5"]
|===
| Author(s): | Joachim Metz <joachim.metz@gmail.com>
| Abstract: | This document contains information about the Common Log File System (CLFS)
| Classification: | Public
| Keywords: | Common Log File System, CLFS
|===

[preface]
== License
....
Copyright (C) 2010-2018, Joachim Metz <joachim.metz@gmail.com>.
Permission is granted to copy, distribute and/or modify this document under the
terms of the GNU Free Documentation License, Version 1.3 or any later version
published by the Free Software Foundation; with no Invariant Sections, no
Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included
in the section entitled "GNU Free Documentation License".
....

[preface]
== Revision history
[cols="1,1,1,5",options="header"]
|===
| Version | Author | Date | Comments
| 0.0.1 | J.B. Metz | November 2010 | Initial version.
| 0.0.2 | J.B. Metz | March 2011 | Additional information.
| 0.0.3 | J.B. Metz | September 2012 | Email update.
| 0.0.4 | J.B. Metz | February 2013 | Additional information.
| 0.0.5 | J.B. Metz | July 2018 | Switched to asciidoc format.
|===

:numbered:
== Overview

As of Windows Vista support for Transactional NTFS (TxF) and Transactional
Registry (TxR) were added. Both systems use the Common Log File System (CLFS)
which was introduced in Windows server 2003 R2.

CLFS was designed on the principles of is short for Algorithm for Recovery and
Isolation Exploiting Semantics (ARIES). For more information see `[MOHAN92]`.

CLFS supports two types of logs:

* dedicated logs; contains a single stream of log records
* multiplexed (or common) logs; contains several streams of log records.  The first stream (stream 0) is the physical stream.

[cols="1,5",options="header"]
|===
| Characteristics | Description
| Byte order | little-endian
| Date and time values |
| Character strings | Unicode strings are stored in UTF-16 little-endian without the byte order mark (BOM).
|===

=== Test version

The following version of programs were used to test the information within this
document:

* Windows Vista
* Windows 7

[yellow-background]*TODO: Windows server 2003 R2, 2008*

== The log store

A CLFS log store consists of:

* a base log file
* one or more container files

In comparison with a disk file systems the log store is similar to a volume.

=== Base log file

The base log file (.blf) contains the log store metadata, like:

* the beginning of the log,
* the container size,
* the container path,
* the location from which restart operations should be per formed,
* the log state,
* the log name,
* the log clients.

For recovery purposes the base log file also contains a copy of the previous
version of the metadata. A dump count value indicates which copy is newest.

The base log file is commonly 64 KiB (65536 bytes) of size, but will grow if
necessary.

=== Container file

The size of the container file is stored in the base log file.

CLFS allows for a maximum of 1023 containers. All the containers file in the
same log have an equal size. The size is a multitude of 512 KiB with a 4 GiB
maximum size, due to 23-bit block offset values (which represent 32-bit file
offsets).  Also see: <<log_sequence_number,Log Sequence Number>>

== [[log_sequence_number]]Log Sequence Number

The log sequence number (LSN) consists of:

* a logical container identifier, which identifies the container that holds the record;
* a block offset within the container, which contains the file offset of the log block that holds the record;
* a record number, which contains the sequence number of the record within the log block.

The LSN (CLFS_LSN) is 8 bytes of size and consist of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0.0 | 9 bits | | Record number +
Where 0 is the first record number
| 1.1 | 23 bits | | Block offset
| 4.0 | 4 bytes | | Logical container identifier
|===

[NOTE]
The logical container identifier is a value maintained by the log store
metadata. It is possible that the logical and physical container identifiers
are the same. Over time a logical container identifier will grow, e.g. a log
store of 2 containers will start out with 0 as the logical container identifier
for the first container, but when the first container is reused (recycled) the
logical container identifier will change into 2.

Special LSN values:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0000000000000000 | CLFS_LSN_NULL | Lower boundary for an LSN +
A valid LSN (0.0.0)
| 0x00000000ffffffff | CLFS_LSN_INVALID | Upper boundary for an LSN +
Not a valid LSN (0.-1.-1)
|===

== Log block

The log block or log IO block is variable of size, but always a multitude of
the sector size. A log block consists of:

* a log block header
* one or more log records
* unused or slack block-space
* fix-up values

A log block can have at most 512 log records.

[NOTE]
`[RUSSNOVICH09]` refers to the fix-up values as sector signature array.

=== Log block header

The log block header is 112 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | 0x0015 | Signature
| 2 | 1 | | Fix-up placeholder value +
Contains the upper byte of the fix-up placeholder value
| 3 | 1 | | Stream number
| 4 | 2 | | Number of sectors +
Size = number x 512
| 6 | 2 | | Copy of number of sectors +
Size = number x 512
| 8 | 4 | | [yellow-background]*Unknown (empty value)*
| 12 | 4 | | [yellow-background]*Unknown (Checksum)* +
[yellow-background]*Contains an unknown checksum of the data in the log block with the checksum value itself set to 0. The checksum is xor based with lookup table.* +
This value is not set in container block
| 16 | 4 | 0x01 | Format version +
[yellow-background]*or sentinel value?*
| 20 | 4 | 0x00 | [yellow-background]*Unknown (empty value)*
| 24 | 8 | | The physical LSN of the block
| 32 | 8 | | Next block LSN +
Contains a (physical) block LSN +
Is set to CLFS_LSN_INVALID if not used.
| 40 | 4 | | Record data offset +
The offset value is relative from the start of the block +
[yellow-background]*or size of log block header?*
| 44 | 4 | | Sector mapping array offset +
The offset value is relative from the start of the block
| 48 | 4 | | Virtual log range array offset +
The offset value is relative from the start of the block
| 52 | 8 | | [yellow-background]*Unknown (offsets array?)*
| 60 | 44 | | [yellow-background]*Unknown (empty?)*
| 104 | 4 | | Offset to fix-up values +
The offset is relative to the start of the block
| 108 | 4 | | [yellow-background]*Unknown (empty?)*
|===

Sometimes CLFS chains multiple blocks. The reason for this is probably related
to writing records.

If a record is in a block-chain, every block in the chain should be read until
either the specific or last record is found. Note that the next block LSN value
of the last block in the chain not necessarily has to point to a block.

=== Log block fix-up values

The fix-up values are 2 bytes of size and are stored front-to-back. They are
stored in 8 byte-aligned chunks.

There is also placeholder fix-up value of the upper byte at offset 2 in the
block header.

E.g. consider a block of 3 sectors of 512 byte in size and the following fix-up
values:
....
00 00 00 00 00 00 30 44
....

Where 0x4430 is the fixed-up byte value of the last sector.

The first fix-up value is 0x0000 and applies to bytes 511 and 512:

....
50 44
....

The the byte value is checked using the following rules:

* The upper byte should be similar to the placeholder (0x44)
* The lower byte should be smaller than 0x80
* The lower byte of the first sector should have 0x40 set
* The lower byte of the last sector should have 0x20 set
* The lower byte of the first sector should have a value of either 0, 4, 8 or 16

Note that the first and last sector rule both apply for a single sector block.

In this case the byte value matches the rules and can be replaces by the fix-up value.

==== Notes

....
Fix-up lower byte value base log 0x10
for container block
* if stream number = 0x00 => 0x08
* if stream number = 0x01 => 0x04
....

== Base log file

The base log file consists of:

* Block containing base log block descriptors record
* 2 x empty sectors
* Block containing current base log metadata information record
* Block containing previous base log metadata information record
* 1 x sector-sized empty block
* 1 x empty sectors

The highest dump count of the base log metadata information record indicates
the most recent version.

=== Base log block descriptors block

The base log block descriptors block is the first block in the base log it is 2
sectors (1024Â bytes) of size. The base log block descriptors block contains a
single record namely the base log block descriptors record.

==== Base log block descriptors record

The base log block descriptors record is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 0x00000001 | [yellow-background]*Unknown (Dump count?)*
| 4 | 4 | 0x00000000 | [yellow-background]*Unknown (empty value)*
| 8 | 4 | 0x00005f1c | [yellow-background]*Unknown (fixed value)*
| 12 | 4 | 0xc1f5c1f5 | [yellow-background]*Unknown (fixed value)*
| 16 | 8 | 0x00000001 | [yellow-background]*Unknown (version?)*
| 24 | 48 | | [yellow-background]*Unknown (empty values)*
| 72 | 4 | | Number of block descriptors +
Value should be within the range [6, 31]
| 76 | ... | | Block descriptor array
|===

==== Base log block descriptor

A base log block descriptor is 24 bytes of size and consists of

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 12 | | [yellow-background]*Unknown (empty values)*
| 12 | 4 | | Block size +
Value in bytes
| 16 | 4 | | Block offset
| 20 | 4 | | Block number (or index)
|===

=== Base log store metadata block

The base log store metadata block is the second and third block in the base log
it is 61 sectors (31232Â bytes) of size. The base log store metadata block
contains a single record namely the base log store metadata record.

==== Base log store metadata record

The base log metadata record is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Unknown (Dump count)*
| 4 | 4 | | [yellow-background]*Unknown*
| 8 | 16 | | Log store (or volume) identifier +
Unique GUID for log store
| 24 | 44 | | [yellow-background]*Unknown (Record offsets array)* +
Contains offset to file information record (type 0xc1fdf006) +
The offsets are relative to the start of the log block
| 68 | 44 | | [yellow-background]*Unknown*
| 112 | 44 | | [yellow-background]*Unknown (array?)*
| 156 | 44 | | [yellow-background]*Unknown*
| 200 | 44 | | [yellow-background]*Unknown (array?)*
| 244 | 44 | | [yellow-background]*Unknown*
| 288 | 4 | | [yellow-background]*Unknown*
| 292 | 4 | | [yellow-background]*Number of values 1*
| 296 | 4 | | [yellow-background]*Unknown*
| 300 | 4 | | [yellow-background]*Number of values 2*
| 304 | 4 | | [yellow-background]*Unknown*
| 308 | 4 | | [yellow-background]*Unknown*
| 312 | 124 x 4 = 496 | | [yellow-background]*Values 1 array* +
Array of 4-byte values +
Unused values are set to 0 +
Maximum of 124 values +
Contains offset to stream attributes record data record (type 0xc1fdf007) +
The offsets are relative to the start of the log block
| 808 | 1024 x 4 = 4096 | | [yellow-background]*Values 2 array* +
Array of 4-byte values +
Unused values are set to 0 +
Maximum of 1024 values +
Contains offset to container attributes record (type 0xc1fdf008) +
The offsets are relative to the start of the log block
| 4904 | 4 | | Information records data size
| 4908 | 4 | | [yellow-background]*Unknown*
| 4912 | 2 | | [yellow-background]*Unknown*
| 4914 | 1 | | [yellow-background]*Unknown (flags)* +
0x01 +
0x02 has number of values2 ? +
0x40 has number of values1 ?
| 4915 | 1 | | [yellow-background]*Unknown (backup of number of values1?)*
| 4916 | 1 | | [yellow-background]*Unknown (backup of number of values2?)*
| 4917 | 3 | | [yellow-background]*Unknown*
| 4920 | ... | | Information records data
|===

=== Base log information record

The base log information record is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Information record type +
[yellow-background]*or 3 byte signature with 1 byte type?*
| 4 | 4 | | Information record size +
Including the type and size values
| 8 | (record size - 8) | | Information record data
|===

==== The file information record

The file information record (type 0xc1fdf006) is 48 bytes of size.

The information record data is 40 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Unknown (Checksum)* +
[yellow-background]*Contains an unknown checksum of the data in the log block with the checksum value itself set to 0*
| 4 | 4 | | Name offset +
The offset is relative to the start of the file information record +
[yellow-background]*or the combined size of the file and attributes information records?*
| 8 | 16 | | [yellow-background]*Unknown (empty values)*
| 24 | 4 | | Block name offset +
The offset is relative to the start of the log block
| 28 | 4 | | Block file attributes offset +
The offset is relative to the start of the log block and points to a stream or container attributes information record
| 32 | 8 | | [yellow-background]*Unknown (empty values)*
|===

The name is an UTF-16 little-endian string with an end-of-string character.

The information records are 8 byte aligned therefore there can be alignment
padding after the name. The size of the name and alignment padding is not part
of the information record size.

==== The stream attributes information record

The stream attributes information record (type 0xc1fdf007) is 136 bytes of size.

The information record data is 128 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 2 | | Stream number +
0x00 = physical log other values are logical logs
| 2 | 2 | 0x0100 +
0x0102 | [yellow-background]*Unknown* +
[yellow-background]*0x0100 => dedicated log type?*
| 4 | 4 | | Flush queue (threshold) size +
Only set for stream number 0
| 8 | 40 | | [yellow-background]*Unknown (empty values?)* +
| 48 | 8 | | [yellow-background]*Unknown LSN?* +
[yellow-background]*Last written owner page?* +
[yellow-background]*Multiplexed log only?*
| 56 | 8 | | Base (or log start) LSN
| 64 | 8 | | Last flushed LSN
| 72 | 8 | | Last LSN
| 80 | 8 | | [yellow-background]*Unknown LSN?*
| 88 | 8 | | [yellow-background]*Unknown LSN?*
| 96 | 32 | | [yellow-background]*Unknown (empty values?)*
|===

The name following this record contains the stream name.

==== The container attribute information record

The container attributes information record (type 0xc1fdf008) is 48 bytes of size.

The information record data is 40 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Container file size
| 4 | 4 | | [yellow-background]*Unknown (empty values)*
| 8 | 4 | | Physical container number
| 12 | 4 | | Logical container number
| 16 | 4 | | [yellow-background]*Unknown (LSN?)* +
[yellow-background]*Seen: 0x00000000 if container file does not exists?*
| 20 | 4 | 0x00000000 | [yellow-background]*Unknown (empty values)*
| 24 | 4 | | Number of streams in container
| 28 | 4 | 0x00000002 +
0x00200004 | [yellow-background]*Unknown*
| 32 | 8 | | [yellow-background]*Unknown (empty values)*
|===

The name following this record contains the container filename.

The logical container number is increased if the container is reused
(recycled). Also see: <<log_sequence_number,Log Sequence Number>>

[yellow-background]*Multiple container files with the same logical container number?*

==== Notes

....
The unknown information record (type 0xc1fdf003) is 184 bytes of size.

The unknown information record (type 0xc1fdf009) is 84 bytes of size.

The unknown information record (type 0xc1fdf00a) is 168 bytes of size.

The unknown information record (type 0xc1fdf00d) is 28 bytes of size.

The unknown information record (type 0xc1fdf00e) is 56 bytes of size.

The unknown information record (type 0xc1fdf00f) is 128 bytes of size.
....

== Container file

The containers of multiplexed logs are made up of 512 KiB regions, which
contain 4 KiB pages. The last page of a region contains the owner page.

[yellow-background]What about dedicated logs?*

=== Owner page

The last 4 KiB of a 512 KiB region in a multiplexed log contains the owner
page. The owner page is used to provide information about virtual logs and
sectors in a specific region.

The owner page consists of:

* the virtual log range, consisting of the lower and upper LSNs
* the mapping between sectors and virtual logs

The owner page is only written if the region has become full. The last block of
the previous region can be split by the insertion of the owner page block. The
remainder of the split-block data is stored in the next region.

The owner page data is stored in a log block without a block data offset (at
block header offsetÂ 112) but uses the values at block header offset:

* 44 for the sector mapping array
* 48 for the virtual log range array

[NOTE]
Not all owner pages contain valid log range data, e.g. the last owner page of
the log is not written until the region has become full.

==== Sector mappings

The sector mappings array contains a maximum of 1024 sector mapping entries
(512 KiB / 512 bytes per sector). Each mapping entry defines a mapping between
a virtual LSN to a physical LSN.

The sector mapping entry is 2 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 1 | | Stream (or client) number +
Should be larger than 0 and smaller than the number of streams in the log store
| 1 | 1 | | Block sector number
|===

A sector mapping entry of 0xff 0xff is used to represent the owner page itself.

The first virtual log stream has either a block sector number of 0. Sector
mappings before the first virtual log stream mapping correspond to the last
segment of a split block started in the previous region.

==== Virtual log range

The virtual log range array contains an entry for every stream. The first entry
is the virtual log range for stream 0.

The virtual log range entry is 16 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| description
| 0 | 8 | | Start LSN
| 8 | 8 | | End LSN
|===

==== Example mapping virtual to physical LSNs

The following example was taken from [RUSSNOVICH09] but adjusted to match the
actual on-disk data.

Let's start with the stream 1 virtual LSN 0.1000.0 (container 0, block 0x1000,
record 0). The owner page for the corresponding region contains the following
information:

Virtual log ranges:

....
Stream 1 virtual LSN range (0.0.0 - 0.1400.0)
Stream 2 virtual LSN range (0.0.0 - 0.1600.0)
....

Sector mappings:

[cols="1,1,5",options="header"]
|===
| Physical sector | Stream | Block sector number
| 00 (0x0000 - 0x01ff) | 1 | 0
| 01 (0x0200 - 0x03ff) | 1 | 1
| 02 (0x0400 - 0x05ff) | 2 | 0
| 03 (0x0600 - 0x07ff) | 2 | 1
| 04 (0x0800 - 0x09ff) | 2 | 2
| 05 (0x0a00 - 0x0bff) | 2 | 3
| 06 (0x0c00 - 0x0dff) | 1 | 0
| 07 (0x0e00 - 0x0fff) | 1 | 1
| 08 (0x1000 - 0x11ff) | 1 | 0
| 09 (0x1200 - 0x13ff) | 1 | 1
| 10 (0x1400 - 0x15ff) | 2 | 0
| ... | |
|===

[cols="1,1,5",options="header"]
|===
| Physical sector range | Stream | Virtual sector range
| 00 - 01 (0x0000 - 0x03ff) | 1 | 00 - 01 (0x0000 - 0x03ff)
| 02 - 05 (0x0400 - 0x0bff) | 2 | 00 - 03 (0x0000 - 0x07ff)
| 06 - 07 (0x0c00 - 0x0fff) | 1 | *03 - 04 (0x0400 - 0x06ff)*
| 08 - 09 (0x1000 - 0x13ff) | 1 | *08 - 09 (0x1000 - 0x11ff)*
| 10      (0x1400 - 0x15ff) | 2 | *06      (0x0c00 - 0x0dff)*
| ... | |
|===

The text has been made bold to emphasize the non-continuous behavior of the
virtual sector range.

The first sector that belongs to stream 1 is physical LSN 0.0.0. This blockâs
size is 2 sectors, therefore the next virtual LSN is 0.0.0 + 0.400.0 = 0.400.0

The next block that belongs to stream 1 is physical LSN 0.c00.0. This blockâs
size is 2 sectors, therefore the next virtual LSN is 0.c00.0 + 0.400.0 =
0.1000.0

The next block that belongs to stream 1 is physical LSN 0.1000.0. This is
virtual LSN 0.1000.0.

=== Record

The container record consist of:

* record header
* record data
* alignment padding

[NOTE]
The records are 8 byte aligned.

==== Record header

The record header is 40 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | The virtual LSN of the record +
| 8 | 8 | | Undo-next LSN +
Contains the first LSN of a chain of records +
Contains a (virtual) record LSN
| 16 | 8 | | Previous LSN +
Contains a (virtual) record LSN
| 24 | 4 | | Record size
| 28 | 4 | | [yellow-background]*Unknown (Next (undo) record size?)*
| 32 | 2 | | Record flags +
See section: <<record_flags,Record flags>>
| 34 | 2 | | Data offset
| 36 | 4 | | Record type +
See section: <<record_types,Record types>>
|===

==== [[record_flags]]Record flags

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x0020 | | [yellow-background]*Unknown*
|===

==== [[record_types]]Record types

The record type consist of multiple record type flags.

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000000 | ClfsNullRecord | Null record
| 0x00000001 | ClfsDataRecord | The log record contains client data
| 0x00000002 | ClfsRestartRecord | The log record is a restart record
| 0x00000004 | ClfsStartRecord | Start of continuation record
| 0x00000008 | ClfsEndRecord | End of continuation record
| 0x00000010 | ClfsContinuationRecord | Continuation record
| 0x00000020 | ClfsLastRecord | The last record in the log block
|===

:numbered!:
[appendix]
== References

`[MOHAN92]`

[cols="1,5",options="header"]
|===
| Title:| ARIES: A Transaction Recovery Method Supporting Fine-Granularity Locking and Partial Rollbacks Using Write-Ahead Logging
| Author(s):| C. Mohan, Don Haderle, Bruce Lindsay, Hamid Pirahesh and Peter Schwarz
| Date:| March 1992
| URL:| http://www.sai.msu.su/~megera/postgres/gist/papers/concurrency/p94-mohan.pdf
|===

`[RUSSNOVICH09]`

[cols="1,5",options="header"]
|===
| Title:| Windows Internals 5 - Covering Windows Server 2008 and Windows Vista
| Author(s):| Mark E. Russinovich and David A. Solomon
| Date:	June 17, 2009
| ISBN-13:| 978-0735625303
|===

`[MSDN]`

[cols="1,5",options="header"]
|===
| Title:| CLFS Stable Storage
| URL:| http://msdn.microsoft.com/en-us/library/ff541862.aspx
|===

`[WIKI]`

[cols="1,5",options="header"]
|===
| Title:| Common Log File System
| URL:| http://en.wikipedia.org/wiki/Common_Log_File_System
|===

[appendix]
== GNU Free Documentation License
Version 1.3, 3 November 2008
Copyright Â© 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
<http://fsf.org/>

Everyone is permitted to copy and distribute verbatim copies of this license
document, but changing it is not allowed.

=== 0. PREAMBLE
The purpose of this License is to make a manual, textbook, or other functional
and useful document "free" in the sense of freedom: to assure everyone the
effective freedom to copy and redistribute it, with or without modifying it,
either commercially or noncommercially. Secondarily, this License preserves for
the author and publisher a way to get credit for their work, while not being
considered responsible for modifications made by others.

This License is a kind of "copyleft", which means that derivative works of the
document must themselves be free in the same sense. It complements the GNU
General Public License, which is a copyleft license designed for free software.

We have designed this License in order to use it for manuals for free software,
because free software needs free documentation: a free program should come with
manuals providing the same freedoms that the software does. But this License is
not limited to software manuals; it can be used for any textual work,
regardless of subject matter or whether it is published as a printed book. We
recommend this License principally for works whose purpose is instruction or
reference.

=== 1. APPLICABILITY AND DEFINITIONS
This License applies to any manual or other work, in any medium, that contains
a notice placed by the copyright holder saying it can be distributed under the
terms of this License. Such a notice grants a world-wide, royalty-free license,
unlimited in duration, to use that work under the conditions stated herein. The
"Document", below, refers to any such manual or work. Any member of the public
is a licensee, and is addressed as "you". You accept the license if you copy,
modify or distribute the work in a way requiring permission under copyright law.

A "Modified Version" of the Document means any work containing the Document or
a portion of it, either copied verbatim, or with modifications and/or
translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of the
Document that deals exclusively with the relationship of the publishers or
authors of the Document to the Document's overall subject (or to related
matters) and contains nothing that could fall directly within that overall
subject. (Thus, if the Document is in part a textbook of mathematics, a
Secondary Section may not explain any mathematics.) The relationship could be a
matter of historical connection with the subject or with related matters, or of
legal, commercial, philosophical, ethical or political position regarding them.

The "Invariant Sections" are certain Secondary Sections whose titles are
designated, as being those of Invariant Sections, in the notice that says that
the Document is released under this License. If a section does not fit the
above definition of Secondary then it is not allowed to be designated as
Invariant. The Document may contain zero Invariant Sections. If the Document
does not identify any Invariant Sections then there are none.

The "Cover Texts" are certain short passages of text that are listed, as
Front-Cover Texts or Back-Cover Texts, in the notice that says that the
Document is released under this License. A Front-Cover Text may be at most 5
words, and a Back-Cover Text may be at most 25 words.

A "Transparent" copy of the Document means a machine-readable copy, represented
in a format whose specification is available to the general public, that is
suitable for revising the document straightforwardly with generic text editors
or (for images composed of pixels) generic paint programs or (for drawings)
some widely available drawing editor, and that is suitable for input to text
formatters or for automatic translation to a variety of formats suitable for
input to text formatters. A copy made in an otherwise Transparent file format
whose markup, or absence of markup, has been arranged to thwart or discourage
subsequent modification by readers is not Transparent. An image format is not
Transparent if used for any substantial amount of text. A copy that is not
"Transparent" is called "Opaque".

Examples of suitable formats for Transparent copies include plain ASCII without
markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly
available DTD, and standard-conforming simple HTML, PostScript or PDF designed
for human modification. Examples of transparent image formats include PNG, XCF
and JPG. Opaque formats include proprietary formats that can be read and edited
only by proprietary word processors, SGML or XML for which the DTD and/or
processing tools are not generally available, and the machine-generated HTML,
PostScript or PDF produced by some word processors for output purposes only.

The "Title Page" means, for a printed book, the title page itself, plus such
following pages as are needed to hold, legibly, the material this License
requires to appear in the title page. For works in formats which do not have
any title page as such, "Title Page" means the text near the most prominent
appearance of the work's title, preceding the beginning of the body of the text.

The "publisher" means any person or entity that distributes copies of the
Document to the public.

A section "Entitled XYZ" means a named subunit of the Document whose title
either is precisely XYZ or contains XYZ in parentheses following text that
translates XYZ in another language. (Here XYZ stands for a specific section
name mentioned below, such as "Acknowledgements", "Dedications",
"Endorsements", or "History".) To "Preserve the Title" of such a section when
you modify the Document means that it remains a section "Entitled XYZ"
according to this definition.

The Document may include Warranty Disclaimers next to the notice which states
that this License applies to the Document. These Warranty Disclaimers are
considered to be included by reference in this License, but only as regards
disclaiming warranties: any other implication that these Warranty Disclaimers
may have is void and has no effect on the meaning of this License.

=== 2. VERBATIM COPYING
You may copy and distribute the Document in any medium, either commercially or
noncommercially, provided that this License, the copyright notices, and the
license notice saying this License applies to the Document are reproduced in
all copies, and that you add no other conditions whatsoever to those of this
License. You may not use technical measures to obstruct or control the reading
or further copying of the copies you make or distribute. However, you may
accept compensation in exchange for copies. If you distribute a large enough
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and you may
publicly display copies.

=== 3. COPYING IN QUANTITY
If you publish printed copies (or copies in media that commonly have printed
covers) of the Document, numbering more than 100, and the Document's license
notice requires Cover Texts, you must enclose the copies in covers that carry,
clearly and legibly, all these Cover Texts: Front-Cover Texts on the front
cover, and Back-Cover Texts on the back cover. Both covers must also clearly
and legibly identify you as the publisher of these copies. The front cover must
present the full title with all words of the title equally prominent and
visible. You may add other material on the covers in addition. Copying with
changes limited to the covers, as long as they preserve the title of the
Document and satisfy these conditions, can be treated as verbatim copying in
other respects.

If the required texts for either cover are too voluminous to fit legibly, you
should put the first ones listed (as many as fit reasonably) on the actual
cover, and continue the rest onto adjacent pages.

If you publish or distribute Opaque copies of the Document numbering more than
100, you must either include a machine-readable Transparent copy along with
each Opaque copy, or state in or with each Opaque copy a computer-network
location from which the general network-using public has access to download
using public-standard network protocols a complete Transparent copy of the
Document, free of added material. If you use the latter option, you must take
reasonably prudent steps, when you begin distribution of Opaque copies in
quantity, to ensure that this Transparent copy will remain thus accessible at
the stated location until at least one year after the last time you distribute
an Opaque copy (directly or through your agents or retailers) of that edition
to the public.

It is requested, but not required, that you contact the authors of the Document
well before redistributing any large number of copies, to give them a chance to
provide you with an updated version of the Document.

=== 4. MODIFICATIONS
You may copy and distribute a Modified Version of the Document under the
conditions of sections 2 and 3 above, provided that you release the Modified
Version under precisely this License, with the Modified Version filling the
role of the Document, thus licensing distribution and modification of the
Modified Version to whoever possesses a copy of it. In addition, you must do
these things in the Modified Version:

A. Use in the Title Page (and on the covers, if any) a title distinct from that
of the Document, and from those of previous versions (which should, if there
were any, be listed in the History section of the Document). You may use the
same title as a previous version if the original publisher of that version
gives permission.

B. List on the Title Page, as authors, one or more persons or entities
responsible for authorship of the modifications in the Modified Version,
together with at least five of the principal authors of the Document (all of
its principal authors, if it has fewer than five), unless they release you from
this requirement.

C. State on the Title page the name of the publisher of the Modified Version,
as the publisher.

D. Preserve all the copyright notices of the Document.

E. Add an appropriate copyright notice for your modifications adjacent to the
other copyright notices.

F. Include, immediately after the copyright notices, a license notice giving
the public permission to use the Modified Version under the terms of this
License, in the form shown in the Addendum below.

G. Preserve in that license notice the full lists of Invariant Sections and
required Cover Texts given in the Document's license notice.

H. Include an unaltered copy of this License.

I. Preserve the section Entitled "History", Preserve its Title, and add to it
an item stating at least the title, year, new authors, and publisher of the
Modified Version as given on the Title Page. If there is no section Entitled
"History" in the Document, create one stating the title, year, authors, and
publisher of the Document as given on its Title Page, then add an item
describing the Modified Version as stated in the previous sentence.

J. Preserve the network location, if any, given in the Document for public
access to a Transparent copy of the Document, and likewise the network
locations given in the Document for previous versions it was based on. These
may be placed in the "History" section. You may omit a network location for a
work that was published at least four years before the Document itself, or if
the original publisher of the version it refers to gives permission.

K. For any section Entitled "Acknowledgements" or "Dedications", Preserve the
Title of the section, and preserve in the section all the substance and tone of
each of the contributor acknowledgements and/or dedications given therein.

L. Preserve all the Invariant Sections of the Document, unaltered in their text
and in their titles. Section numbers or the equivalent are not considered part
of the section titles.

M. Delete any section Entitled "Endorsements". Such a section may not be
included in the Modified Version.

N. Do not retitle any existing section to be Entitled "Endorsements" or to
conflict in title with any Invariant Section.

O. Preserve any Warranty Disclaimers.

If the Modified Version includes new front-matter sections or appendices that
qualify as Secondary Sections and contain no material copied from the Document,
you may at your option designate some or all of these sections as invariant. To
do this, add their titles to the list of Invariant Sections in the Modified
Version's license notice. These titles must be distinct from any other section
titles.

You may add a section Entitled "Endorsements", provided it contains nothing but
endorsements of your Modified Version by various partiesâfor example,
statements of peer review or that the text has been approved by an organization
as the authoritative definition of a standard.

You may add a passage of up to five words as a Front-Cover Text, and a passage
of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts
in the Modified Version. Only one passage of Front-Cover Text and one of
Back-Cover Text may be added by (or through arrangements made by) any one
entity. If the Document already includes a cover text for the same cover,
previously added by you or by arrangement made by the same entity you are
acting on behalf of, you may not add another; but you may replace the old one,
on explicit permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License give
permission to use their names for publicity for or to assert or imply
endorsement of any Modified Version.

=== 5. COMBINING DOCUMENTS
You may combine the Document with other documents released under this License,
under the terms defined in section 4 above for modified versions, provided that
you include in the combination all of the Invariant Sections of all of the
original documents, unmodified, and list them all as Invariant Sections of your
combined work in its license notice, and that you preserve all their Warranty
Disclaimers.

The combined work need only contain one copy of this License, and multiple
identical Invariant Sections may be replaced with a single copy. If there are
multiple Invariant Sections with the same name but different contents, make the
title of each such section unique by adding at the end of it, in parentheses,
the name of the original author or publisher of that section if known, or else
a unique number. Make the same adjustment to the section titles in the list of
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled "History" in the
various original documents, forming one section Entitled "History"; likewise
combine any sections Entitled "Acknowledgements", and any sections Entitled
"Dedications". You must delete all sections Entitled "Endorsements".

=== 6. COLLECTIONS OF DOCUMENTS
You may make a collection consisting of the Document and other documents
released under this License, and replace the individual copies of this License
in the various documents with a single copy that is included in the collection,
provided that you follow the rules of this License for verbatim copying of each
of the documents in all other respects.

You may extract a single document from such a collection, and distribute it
individually under this License, provided you insert a copy of this License
into the extracted document, and follow this License in all other respects
regarding verbatim copying of that document.

=== 7. AGGREGATION WITH INDEPENDENT WORKS
A compilation of the Document or its derivatives with other separate and
independent documents or works, in or on a volume of a storage or distribution
medium, is called an "aggregate" if the copyright resulting from the
compilation is not used to limit the legal rights of the compilation's users
beyond what the individual works permit. When the Document is included in an
aggregate, this License does not apply to the other works in the aggregate
which are not themselves derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these copies of the
Document, then if the Document is less than one half of the entire aggregate,
the Document's Cover Texts may be placed on covers that bracket the Document
within the aggregate, or the electronic equivalent of covers if the Document is
in electronic form. Otherwise they must appear on printed covers that bracket
the whole aggregate.

=== 8. TRANSLATION
Translation is considered a kind of modification, so you may distribute
translations of the Document under the terms of section 4. Replacing Invariant
Sections with translations requires special permission from their copyright
holders, but you may include translations of some or all Invariant Sections in
addition to the original versions of these Invariant Sections. You may include
a translation of this License, and all the license notices in the Document, and
any Warranty Disclaimers, provided that you also include the original English
version of this License and the original versions of those notices and
disclaimers. In case of a disagreement between the translation and the original
version of this License or a notice or disclaimer, the original version will
prevail.

If a section in the Document is Entitled "Acknowledgements", "Dedications", or
"History", the requirement (section 4) to Preserve its Title (section 1) will
typically require changing the actual title.

=== 9. TERMINATION
You may not copy, modify, sublicense, or distribute the Document except as
expressly provided under this License. Any attempt otherwise to copy, modify,
sublicense, or distribute it is void, and will automatically terminate your
rights under this License.

However, if you cease all violation of this License, then your license from a
particular copyright holder is reinstated (a) provisionally, unless and until
the copyright holder explicitly and finally terminates your license, and (b)
permanently, if the copyright holder fails to notify you of the violation by
some reasonable means prior to 60 days after the cessation.

Moreover, your license from a particular copyright holder is reinstated
permanently if the copyright holder notifies you of the violation by some
reasonable means, this is the first time you have received notice of violation
of this License (for any work) from that copyright holder, and you cure the
violation prior to 30 days after your receipt of the notice.

Termination of your rights under this section does not terminate the licenses
of parties who have received copies or rights from you under this License. If
your rights have been terminated and not permanently reinstated, receipt of a
copy of some or all of the same material does not give you any rights to use it.

=== 10. FUTURE REVISIONS OF THIS LICENSE
The Free Software Foundation may publish new, revised versions of the GNU Free
Documentation License from time to time. Such new versions will be similar in
spirit to the present version, but may differ in detail to address new problems
or concerns. See http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number. If the
Document specifies that a particular numbered version of this License "or any
later version" applies to it, you have the option of following the terms and
conditions either of that specified version or of any later version that has
been published (not as a draft) by the Free Software Foundation. If the
Document does not specify a version number of this License, you may choose any
version ever published (not as a draft) by the Free Software Foundation. If the
Document specifies that a proxy can decide which future versions of this
License can be used, that proxy's public statement of acceptance of a version
permanently authorizes you to choose that version for the Document.

=== 11. RELICENSING
"Massive Multiauthor Collaboration Site" (or "MMC Site") means any World Wide
Web server that publishes copyrightable works and also provides prominent
facilities for anybody to edit those works. A public wiki that anybody can edit
is an example of such a server. A "Massive Multiauthor Collaboration" (or
"MMC") contained in the site means any set of copyrightable works thus
published on the MMC site.

"CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license
published by Creative Commons Corporation, a not-for-profit corporation with a
principal place of business in San Francisco, California, as well as future
copyleft versions of that license published by that same organization.

"Incorporate" means to publish or republish a Document, in whole or in part, as
part of another Document.

An MMC is "eligible for relicensing" if it is licensed under this License, and
if all works that were first published under this License somewhere other than
this MMC, and subsequently incorporated in whole or in part into the MMC, (1)
had no cover texts or invariant sections, and (2) were thus incorporated prior
to November 1, 2008.

The operator of an MMC Site may republish an MMC contained in the site under
CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC
is eligible for relicensing.

